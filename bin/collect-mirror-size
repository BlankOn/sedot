#!/usr/bin/env bash

. `dirname $0`/../etc/config.sh
. $BASE/lib/common.sh

NODE=$1

if [ "$NODE" == "" ]; then
	NODE=`hostname -f`
fi

#
# Functions
#

ensure_rrd () {
	RRD=$1

	[ -f "$RRD" ] && return 0

	NOW=`date "+%s"`
	INTERVAL=86400
	START=$(( NOW - 3 * INTERVAL ))
	HIYEAR=$(( 366 * 5 ))
	LOYEAR=$(( 52 * 15 ))

	rrdtool create "$RRD" \
		--step $INTERVAL \
		--start $START \
		DS:value:GAUGE:$INTERVAL:0:U \
		RRA:AVERAGE:0.5:1:$HIYEAR \
		RRA:AVERAGE:0.5:7:$LOYEAR \
		RRA:MIN:0.5:7:$LOYEAR \
		RRA:MAX:0.5:7:$LOYEAR
}

update_rrd () {
	RRD=$1
	VAL=$2

	NOW=`date "+%s"`

	rrdtool update "$RRD" $NOW:$VAL
}


#
# Check lock
#

HOST=`hostname -f`
LOCK=$BASE/data/lock/collect-mirror-size-$HOST

trap 'do_unlock "$LOCK"' 1 2 3 6

do_lock "$LOCK"
if [ "$?" -ne "0" ]; then
	exit 1
fi

#
# Get mirror size
#

NODEDIR=$BASE/nodes/$NODE
PKGS=$NODEDIR/pkgs
PKGBASE=$BASE/pkgs
LOGBASE=$BASE/log/mirror-size

mkdir -p $LOGBASE

cat $PKGS | while read pkg
do
	TARGET=`cat $PKGBASE/$pkg/target`
	SIZE=`nice -n 9 du -s $TARGET | awk '{ print $1 }'`

	RRD=$LOGBASE/$pkg.rrd

	ensure_rrd "$RRD"
	update_rrd "$RRD" "$size"
done

#
# Unlock
#

do_unlock "$LOCK"

